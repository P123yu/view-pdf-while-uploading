
// import React, { useState } from 'react';
// import { Document, Page } from 'react-pdf';
// import { pdfjs } from 'react-pdf';
// import './App.css'; // You can style as needed

// // Set up the worker for PDF rendering
// pdfjs.GlobalWorkerOptions.workerSrc = new URL(
//   'pdfjs-dist/build/pdf.worker.min.mjs',
//   import.meta.url
// ).toString();

// const App = () => {
//   const [file, setFile] = useState(null);
//   const [numPages, setNumPages] = useState(null);
//   const [pageNumber, setPageNumber] = useState(1);

//   // Handle file upload
//   const onFileChange = (e) => {
//     const uploadedFile = e.target.files[0];
//     if (uploadedFile) {
//       setFile(URL.createObjectURL(uploadedFile)); // Create an object URL to display the PDF
//     }
//   };

//   // On document load, get the number of pages
//   const onLoadSuccess = ({ numPages }) => {
//     setNumPages(numPages);
//   };

//   return (
//     <div className="app-container">
//       <div className="upload-section">
//         <input type="file" onChange={onFileChange} accept="application/pdf" />
//       </div>
      
//       <div className="pdf-viewer">
//         {file && (
//           <Document
//             file={file}
//             onLoadSuccess={onLoadSuccess}
//           >
//             <Page pageNumber={pageNumber} />
//           </Document>
//         )}
//       </div>

//       <div className="controls">
//         <button
//           onClick={() => setPageNumber(Math.max(pageNumber - 1, 1))}
//           disabled={pageNumber === 1}
//         >
//           Previous
//         </button>
//         <span>
//           Page {pageNumber} of {numPages}
//         </span>
//         <button
//           onClick={() => setPageNumber(Math.min(pageNumber + 1, numPages))}
//           disabled={pageNumber === numPages}
//         >
//           Next
//         </button>
//       </div>
//     </div>
//   );
// };

// export default App;



import React, { useState } from 'react';
import { Document, Page } from 'react-pdf';
import { pdfjs } from 'react-pdf';
import './App.css'; // You can style as needed

// Set up the worker for PDF rendering
pdfjs.GlobalWorkerOptions.workerSrc = new URL(
  'pdfjs-dist/build/pdf.worker.min.mjs',
  import.meta.url
).toString();

const App = () => {
  const [file, setFile] = useState(null);
  const [numPages, setNumPages] = useState(null);
  const [pageNumber, setPageNumber] = useState(1);

  // Handle file upload
  const onFileChange = (e) => {
    const uploadedFile = e.target.files[0];
    if (uploadedFile) {
      setFile(URL.createObjectURL(uploadedFile)); // Create an object URL to display the PDF
    }
  };

  // On document load, get the number of pages
  const onLoadSuccess = ({ numPages }) => {
    setNumPages(numPages);
  };

  return (
    <div className="app-container">
      <div className="upload-section">
        <input type="file" onChange={onFileChange} accept="application/pdf" />
      </div>
      
      <div className="pdf-viewer">
        {file && (
          <Document
            file={file}
            onLoadSuccess={onLoadSuccess}
          >
            <Page pageNumber={pageNumber} />
          </Document>
        )}
      </div>

      <div className="controls">
        <button
          onClick={() => setPageNumber(Math.max(pageNumber - 1, 1))}
          disabled={pageNumber === 1}
        >
          Previous
        </button>
        <span>
          Page {pageNumber} of {numPages}
        </span>
        <button
          onClick={() => setPageNumber(Math.min(pageNumber + 1, numPages))}
          disabled={pageNumber === numPages}
        >
          Next
        </button>
      </div>
    </div>
  );
};

export default App;
